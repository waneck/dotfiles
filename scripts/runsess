#!/bin/bash

if [ -z "$1" ]; then
  echo "Invalid session syntax: Must contain the session name"
fi

export XWIN=$(xdotool getactivewindow || echo "")
export SESS="$HOME/.sess/$1"
export SESS_NAME="$1"

function saveSess {
  SESS_PWD=$PWD
  echo "SESS_PWD=$PWD" > $SESS
  echo "SESS_NAME=\"$SESS_NAME\"" >> $SESS
  echo "SESS_ARGS=\"$SESS_ARGS\"" >> $SESS
  if [ ! -z "$XWIN" ]; then
    xwininfo -id $XWIN |
      sed -n -e "s/^ \+Absolute upper-left X: \+\([0-9]\+\).*/XSESS_X=\1/p" \
        -e "s/^ \+Absolute upper-left Y: \+\([0-9]\+\).*/XSESS_Y=\1/p" \
        -e "s/^ \+Width: \+\([0-9]\+\).*/XSESS_WIDTH=\1/p" \
        -e "s/^ \+Height: \+\([0-9]\+\).*/XSESS_HEIGHT=\1/p" >> $SESS
  fi
}

if [ -f "$SESS" ]; then
  source "$HOME/.sess/$1"
  echo "Restoring session $1"
  # restore 
  if [ ! -z "$XWIN" ] && [ ! -z "$XSESS_WIDTH" ]; then
    echo "Restoring window"
    xdotool windowsize $XWIN $XSESS_WIDTH $XSESS_HEIGHT
    xdotool windowmove $XWIN $XSESS_X $XSESS_Y
  fi
else
  export SESS_ARGS=${@:2}
  echo sess args $SESS_ARGS
  echo sess args $@
  saveSess
fi

trap 'saveSess; exit' SIGINT SIGTERM EXIT

while ! eval "$SESS_ARGS" < `tty` > `tty`; do
  echo "$SESS_ARGS failed with error $?"
  sleep 1
done

saveSess
